using Microsoft.Extensions.Logging;
using rnDotnet.Configurations;
using rnDotnet.Utils.Prompts;
using System.Threading.Tasks;

namespace rnDotnet.Services.AI
{
    public class AIMalwareSummaryGenerator : IMalwareSummaryGenerator
    {
        private readonly IAIClient _aiClient;
        private readonly AIConfig _aiConfig;
        private readonly ILogger<AIMalwareSummaryGenerator> _logger;

        public AIMalwareSummaryGenerator(IAIClient aiClient, AIConfig aiConfig, ILogger<AIMalwareSummaryGenerator> logger)
        {
            _aiClient = aiClient;
            _aiConfig = aiConfig;
            _logger = logger;
        }

        public async Task<string> GenerateSummaryAsync(string decompiledCode, string systemInstruction)
        {
            _logger.LogInformation("Generating Malware Summary using AI Model: {ModelId}...", _aiConfig.SummaryModel);
            // Pass the chosen instruction to the prompt builder
            string prompt = MalwareSummaryPromptBuilder.BuildPrompt(systemInstruction, decompiledCode);
            return await _aiClient.GetCompletionAsync(
                prompt,
                _aiConfig.SummaryModel,
                _aiConfig.ProjectId,
                _aiConfig.Location,
                _aiConfig.Publisher
            );
        }
    }
}
